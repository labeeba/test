{"version":3,"sources":["webpack:///./src/app/test/test.module.ts","webpack:///./src/app/test/test.page.html","webpack:///./src/app/test/test.page.scss","webpack:///./src/app/test/test.page.ts"],"names":[],"mappings":"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","file":"test-test-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestPage } from './test.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TestPage]\n})\nexport class TestPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>test</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-button id=\\\"predict\\\" (click)=\\\"predict()\\\"> Login\\n  </ion-button>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QvdGVzdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n\n// import { SenderService } from './sender.service';\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.page.html',\n  styleUrls: ['./test.page.scss'],\n})\n\n\nexport class TestPage implements OnInit {\n  api: Observable<any>;\n  file: Blob;\n  audioFile: Blob;\n  formData: FormData;\n  test_file: string;\n  formthing: JSON;\n\n\n\n  // sound_filepath: string;\n  // postUrl = 'http://127.0.0.1:5001/test_wav'; // change this to express route.\n  fetchAudioUrl = 'http://localhost:8100/assets/sound/to_test_mono2.wav';\n  // audiofile: string;\n\n\n\n  // express server this works!!!!!!\n  constructor(private httpClient: HttpClient) {\n    this.api = this.httpClient.get('http://127.0.0.1:5001/', { responseType: 'text' });\n    this.api.subscribe(data => {\n      console.log('my data:', data);\n    });\n    // this.sound_filepath = 'assets/sound/to_test_mono2.wav';\n  }\n\n\n  async getAudio() {\n    this.api = this.httpClient.get(this.fetchAudioUrl, { responseType: 'blob' });\n    this.api.subscribe(data => {\n      this.file = new Blob([data], { 'type': 'audio/wav; codecs=MS_PCM' });\n\n      console.log('gotfile', this.file);\n    });\n    return this.file;\n\n  }\n\n\n  // for express\n  async predict() {\n    this.test_file = '../to_test_mono2.wav';\n    this.audioFile = await this.getAudio(); // calling the function to get audio\n    this.formData = new FormData();\n    this.formData.append('file', this.test_file);\n    // original line below\n    const file = new File([this.audioFile], 'heartsoundz', { lastModified: 1534584790000 });\n    this.api = this.httpClient.post('http://localhost:5001/predict', file, { responseType: 'text' });\n    // for testing\n    // this.api = this.httpClient.get('http://localhost:8080/predict', { responseType: 'text' });\n    // this.api = this.httpClient.post(this.postUrl, { 'file': this.audioFile });\n    this.api.subscribe(data => {\n      console.log('prediction:', data);\n    });\n\n\n\n  }\n\n  // for flask\n  // async predict() {\n  //   this.audioFile = await this.getAudio(); // calling the function to get audio\n  //   const formData: FormData = new FormData();\n  //   formData.append('file', this.audioFile);\n  //   this.api = this.httpClient.post('http://127.0.0.1:5001/test_wav', formData, { responseType: 'text' });\n  //   // this.api = this.httpClient.post(this.postUrl, { 'file': this.audioFile });\n  //   this.api.subscribe(data => {\n  //     console.log('my data:', data);\n  //   });\n\n\n  // }\n\n  // upload_wav() {\n  //   const formData = new FormData();\n  //   const audioFile = 'assets/sound/to_test_mono2.wav';\n  //   formData.append('myAudioFile', audioFile);\n  //   this.api = this.httpClient.post('http://127.0.0.1:5001/test_wav', formData, { responseType: 'text' });\n\n  //   this.api.subscribe(data => {\n  //     console.log('my data:', data);\n\n  //   });\n\n\n  // }\n\n\n\n\n\n  ngOnInit() {\n\n  }\n\n}\n"],"sourceRoot":""}